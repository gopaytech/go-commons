version: '3'

vars:
  PACKAGE: github.com/gopaytech/go-commons
  COVERAGE_DIR: ./_output/coverage
  VERSION:
    sh: cat VERSION
  CURRENT_DIR:
    sh: pwd

tasks:
  mkdir:
    desc: Create required directory
    cmds:
      - mkdir -p {{.COVERAGE_DIR}}
    status:
      - test -p {{.COVERAGE_DIR}}
    silent: true

  vendor:
    desc: Run Go vendor
    cmds:
      - echo {{.CURRENT_DIR}}
      - go mod tidy
      - go mod vendor
    silent: true

  test:
    desc: Run test
    deps: [ mkdir,vendor ]
    cmds:
      - go test -v -race -coverprofile={{.COVERAGE_DIR}}/coverage.out -covermode=atomic ./...

  itest:
    desc: Run integration test
    deps: [ mkdir,vendor ]
    cmds:
      - go test -v -race -tags=integration -coverprofile={{.COVERAGE_DIR}}/coverage.out -covermode=atomic ./...

  local-itest:
    desc: Run local integration test
    deps: [ mkdir,vendor ]
    cmds:
      - go test -v -race -tags=local,integration -coverprofile={{.COVERAGE_DIR}}/coverage.out -covermode=atomic ./...
      - go tool cover -html={{.COVERAGE_DIR}}/coverage.out -o {{.COVERAGE_DIR}}/coverage.html

  install-dev:
    desc: Install development tools
    cmds:
      - go install github.com/vektra/mockery/v2@v2.20.0

  gitlab-mock:
    desc: Generate mock
    dir: pkg/gitlab
    cmds:
      - mockery --all --case=underscore --output ./gitlab_mock --outpkg gitlab_mock

  tmpl-mock:
    desc: Generate mock
    dir: pkg/tmpl
    cmds:
      - mockery --all --case=underscore --output ./tmpl_mock --outpkg tmpl_mock

  mock:
    desc: Generate mock
    deps: [ gitlab-mock,tmpl-mock ]
